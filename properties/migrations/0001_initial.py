# Generated by Django 5.2.7 on 2025-10-31 11:18

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Amenity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name_plural": "Amenities",
            },
        ),
        migrations.CreateModel(
            name="BlackoutDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="PropertyImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="property_images/")),
            ],
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Property Name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        default=uuid.uuid4, editable=False, max_length=255, unique=True
                    ),
                ),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("farmhouse", "Farmhouse"),
                            ("villa", "Villa"),
                            ("resort", "Resort"),
                            ("cottage", "Cottage"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=50,
                    ),
                ),
                ("state", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("area", models.CharField(max_length=255)),
                ("pin_code", models.CharField(max_length=6)),
                (
                    "google_maps_location",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("short_description", models.CharField(max_length=250)),
                ("full_description", models.TextField()),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Base Price per night",
                    ),
                ),
                (
                    "weekend_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if same as base price",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "extra_guest_charge",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("check_in_time", models.TimeField()),
                ("check_out_time", models.TimeField()),
                ("bedrooms", models.PositiveIntegerField(default=1)),
                ("bathrooms", models.PositiveIntegerField(default=1)),
                (
                    "max_guests",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Maximum Capacity"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "amenities",
                    models.ManyToManyField(blank=True, to="properties.amenity"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="properties",
                        to="properties.category",
                    ),
                ),
            ],
        ),
    ]
